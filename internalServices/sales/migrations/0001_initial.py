# Generated by Django 5.0.3 on 2024-04-15 10:44

import datetime
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arabic_name', models.CharField(max_length=200)),
                ('latin_name', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(error_messages={'null': 'The line item field is not valid'})),
                ('internalCode', models.TextField(error_messages={'null': 'The line item field is not valid'})),
                ('odooRef', models.TextField(error_messages={'null': 'The line item field is not valid'}, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Serial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefix', models.CharField(default='A', max_length=30)),
                ('postfix', models.CharField(default='A', max_length=30)),
                ('next', models.PositiveBigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StaticData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quotationReference', models.CharField(blank=True, max_length=100)),
                ('date', models.DateField()),
                ('projectName', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('scopeOfWork', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('quotationValidity', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('deliveryTime', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('deliveryAddress', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('termsOfPayment', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('warranty', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('General', models.CharField(max_length=100, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('contractReference', models.CharField(max_length=50, validators=[django.core.validators.MinLengthValidator(5, 'the field must contain at least 5 characters')])),
                ('contract', models.FileField(upload_to='', validators=[django.core.validators.FileExtensionValidator(['pdf'], message='Please select a valid excel file')])),
            ],
        ),
        migrations.CreateModel(
            name='ProductLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optional', models.BooleanField(default=False)),
                ('lineItem', models.PositiveIntegerField(error_messages={'null': 'The line item field is not valid'})),
                ('quantity', models.PositiveIntegerField()),
                ('unitPrice', models.DecimalField(decimal_places=4, max_digits=15)),
                ('product', models.ForeignKey(error_messages={'null': 'The internal code field is not valid'}, on_delete=django.db.models.deletion.DO_NOTHING, to='sales.product')),
                ('productList', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productLines', to='sales.productlist')),
            ],
        ),
        migrations.CreateModel(
            name='QuoteRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priceUnit', models.CharField(choices=[('SAR', 'Saudi Riyals'), ('USD', 'United States Dollar')], max_length=3)),
                ('excel', models.FileField(upload_to='', validators=[django.core.validators.FileExtensionValidator(['xlsx'], message='Please select a valid excel file')])),
                ('state', models.CharField(choices=[('dra', 'Drafted'), ('quo', 'Quotation'), ('val', 'Validated'), ('app', 'Approved'), ('napp', 'Not Approved')], default='dra', max_length=4)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now)),
                ('discount', models.DecimalField(decimal_places=3, default=0, error_messages={'null': "the discount field can'b be empty"}, max_digits=15, validators=[django.core.validators.MinValueValidator(0, 'Negative values are not allowed')])),
                ('deliveryAndInstallation', models.DecimalField(decimal_places=3, default=0, max_digits=15, validators=[django.core.validators.MinValueValidator(0, 'Negative values are not allowed')])),
                ('productsAdded', models.BooleanField(default=False)),
                ('serial', models.CharField(editable=False, max_length=100, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='sales.company')),
            ],
            options={
                'permissions': [('can_approve_quote', 'can approve quotations'), ('can_disapprove_quote', 'can disapprove quotations'), ('can_validate_quote', 'can validate a quote'), ('can_add_static_to_quote', 'can add static data to quote'), ('can_draften_quote', 'can draften quotation'), ('can_review_quote', 'can review a quotations')],
            },
        ),
    ]
